---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import Layout from './Layout.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Button from '../components/ui/Button.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<Layout title={title} description={description}>
	<main class="main-content">
		<article class="article">
			{heroImage && (
				<div class="hero-image mb-8">
					<Image
						width={1200}
						height={320}
						src={heroImage}
						alt={`Cover image for ${title}`}
						class="w-full h-48 md:h-64 lg:h-80 object-cover rounded-lg shadow-lg"
					/>
				</div>
			)}

			<div class="container mx-auto px-4 max-w-4xl">
				<header class="article-header text-center mb-12">
					<div class="article-meta mb-6">
						<time class="text-sm text-gray-600 font-medium">
							<FormattedDate date={pubDate} />
						</time>
						{updatedDate && (
							<div class="text-xs text-gray-500 mt-1 italic">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)}
					</div>
					<h1 class="article-title text-4xl md:text-5xl font-bold text-gray-900 leading-tight mb-6">
						{title}
					</h1>
					{description && (
						<p class="article-description text-xl text-gray-600 leading-relaxed max-w-3xl mx-auto">
							{description}
						</p>
					)}
				</header>

				<div class="prose prose-lg prose-gray max-w-none">
					<slot />
				</div>

				<footer class="article-footer mt-16 pt-8 border-t border-gray-200">
					<div class="flex flex-col sm:flex-row items-center justify-between gap-4">
						<div class="text-sm text-gray-600">
							<span>Published on </span>
							<time><FormattedDate date={pubDate} /></time>
						</div>
						<Button href="/blog" variant="secondary">
							‚Üê Back to Blog
						</Button>
					</div>
				</footer>
			</div>
		</article>
	</main>
</Layout>

<style>
	.prose {
		color: var(--color-text-primary);
	}

	.prose :global(h1),
	.prose :global(h2),
	.prose :global(h3),
	.prose :global(h4),
	.prose :global(h5),
	.prose :global(h6) {
		color: var(--color-text-primary);
		font-weight: var(--font-weight-semibold);
		line-height: var(--line-height-tight);
		margin-top: 2rem;
		margin-bottom: 1rem;
	}

	.prose :global(h1) {
		font-size: var(--font-size-3xl);
		margin-top: 3rem;
	}

	.prose :global(h2) {
		font-size: var(--font-size-2xl);
		margin-top: 2.5rem;
	}

	.prose :global(h3) {
		font-size: var(--font-size-xl);
		margin-top: 2rem;
	}

	.prose :global(p) {
		line-height: var(--line-height-relaxed);
		margin-bottom: 1.5rem;
		color: var(--color-text-primary);
	}

	.prose :global(a) {
		color: var(--color-primary);
		text-decoration: underline;
		text-decoration-color: var(--color-primary);
		text-decoration-thickness: 2px;
		text-underline-offset: 3px;
		transition: all var(--transition-fast);
	}

	.prose :global(a:hover) {
		color: var(--color-primary-dark);
		text-decoration-color: var(--color-primary-dark);
	}

	.prose :global(blockquote) {
		border-left: 4px solid var(--color-primary);
		padding-left: 1.5rem;
		margin: 2rem 0;
		font-style: italic;
		color: var(--color-text-secondary);
		background: var(--color-bg-secondary);
		padding: 1.5rem;
		border-radius: var(--radius-md);
	}

	.prose :global(code) {
		background: var(--color-bg-secondary);
		padding: 0.25rem 0.5rem;
		border-radius: var(--radius-sm);
		font-size: 0.9em;
		color: var(--color-primary);
	}

	.prose :global(pre) {
		background: var(--color-bg-tertiary);
		padding: 1.5rem;
		border-radius: var(--radius-md);
		overflow-x: auto;
		margin: 2rem 0;
	}

	.prose :global(pre code) {
		background: none;
		padding: 0;
		color: inherit;
	}

	.prose :global(ul),
	.prose :global(ol) {
		margin: 1.5rem 0;
		padding-left: 2rem;
	}

	.prose :global(li) {
		margin-bottom: 0.5rem;
		line-height: var(--line-height-relaxed);
	}

	.prose :global(img) {
		border-radius: var(--radius-md);
		box-shadow: var(--shadow-md);
		margin: 2rem auto;
		max-width: 100%;
		height: auto;
	}

	.text-gray-900 {
		color: var(--color-text-primary);
	}

	.text-gray-600 {
		color: var(--color-text-secondary);
	}

	.text-gray-500 {
		color: var(--color-text-tertiary);
	}

	.border-gray-200 {
		border-color: var(--color-border);
	}
</style>
